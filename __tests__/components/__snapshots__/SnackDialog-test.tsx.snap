// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/SnackDialog test SnackDialog component 1`] = `
<View
  pointerEvents="box-none"
  style={
    Array [
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      },
      Object {
        "backgroundColor": "transparent",
        "opacity": 1,
        "zIndex": 2,
      },
    ]
  }
>
  <View
    collapsable={false}
    deviceHeight={null}
    deviceWidth={null}
    forwardedRef={[Function]}
    hideModalContentWhileAnimating={true}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    panResponderThreshold={4}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    style={
      Object {
        "flex": 1,
        "justifyContent": "flex-end",
        "left": 0,
        "margin": 37.5,
        "top": 0,
        "transform": Array [
          Object {
            "translateY": 1334,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeDirection={
      Array [
        "left",
        "right",
        "down",
      ]
    }
    swipeThreshold={50}
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "paddingBottom": 0,
        }
      }
    >
      <RCTSafeAreaView>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#ffffff",
                "borderRadius": 4,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "orange",
              }
            }
          />
        </View>
      </RCTSafeAreaView>
    </View>
  </View>
</View>
`;
