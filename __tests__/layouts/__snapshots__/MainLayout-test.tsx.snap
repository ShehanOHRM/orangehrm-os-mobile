// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`layout/MainLayout test MainLayout layout 1`] = `
Array [
  <RCTSafeAreaView
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "backgroundColor": "#ffffff",
        },
      ]
    }
  >
    <RCTScrollView
      contentContainerStyle={
        Object {
          "flexGrow": 1,
        }
      }
      contentInsetAdjustmentBehavior="automatic"
      keyboardShouldPersistTaps="handled"
    >
      <View>
        <View
          style={
            Object {
              "backgroundColor": "orange",
            }
          }
        />
      </View>
    </RCTScrollView>
  </RCTSafeAreaView>,
  <Modal
    animationType="none"
    deviceHeight={null}
    deviceWidth={null}
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    panResponderThreshold={4}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    storageSetItem={[Function]}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  />,
]
`;

exports[`layout/MainLayout test MainLayout layout::footer 1`] = `
Array [
  <RCTSafeAreaView
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "backgroundColor": "#ffffff",
        },
      ]
    }
  >
    <RCTScrollView
      contentContainerStyle={
        Object {
          "flexGrow": 1,
        }
      }
      contentInsetAdjustmentBehavior="automatic"
      keyboardShouldPersistTaps="handled"
    >
      <View>
        <View
          style={
            Object {
              "backgroundColor": "orange",
            }
          }
        />
      </View>
    </RCTScrollView>
    <View
      style={
        Object {
          "backgroundColor": "orange",
        }
      }
    />
  </RCTSafeAreaView>,
  <Modal
    animationType="none"
    deviceHeight={null}
    deviceWidth={null}
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    panResponderThreshold={4}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    storageSetItem={[Function]}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  />,
]
`;

exports[`layout/MainLayout test MainLayout layout::statusBarBackgroundColor 1`] = `
Array [
  <RCTSafeAreaView
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "backgroundColor": "#ffffff",
        },
      ]
    }
  >
    <RCTScrollView
      contentContainerStyle={
        Object {
          "flexGrow": 1,
        }
      }
      contentInsetAdjustmentBehavior="automatic"
      keyboardShouldPersistTaps="handled"
    >
      <View>
        <View
          style={
            Object {
              "backgroundColor": "orange",
            }
          }
        />
      </View>
    </RCTScrollView>
  </RCTSafeAreaView>,
  <Modal
    animationType="none"
    deviceHeight={null}
    deviceWidth={null}
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    panResponderThreshold={4}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    storageSetItem={[Function]}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  />,
]
`;
